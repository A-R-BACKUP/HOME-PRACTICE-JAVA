변수 선언

변수 선언은 이렇게

type variableName;

앞에 자료형을 써주고 뒤에 변수 이름을 써주면 됩니다.

정수형을 담을 변수 a, 문자열을 담을 변수 s를 선언하기 위해서는 이렇게 써주면 되겠죠?

int a;
String s;

변수 이름 규칙

변수의 이름을 지어줄 때 알아야할 규칙이 몇 가지 있습니다.

    대소문자를 구분 합니다. codeit과 codeIt은 서로 다른 변수입니다.

    숫자로 시작할 수 없습니다.

    밑줄(_)과 달러 표시($)를 사용할 수는 있지만, 사용하지 않는 것이 좋습니다. $는 주로 자동 생성되는 변수명으로 쓰이고, _는 보통 상수 이름에 쓰입니다.

    class, public과 같은 자바의 예약어는 변수명으로 쓸 수 없습니다.

    자바의 변수명은 '카멜 케이스(camelCase)'라는 기법으로 작성하는게 좋습니다. 카멜 케이스에서 첫 번째 글자는 소문자고, 그 후에 새로운 단어의 첫 번째 글자는 대문자입니다(myName, someRidiculouslyLongName).

값 넣어주기

변수를 선언하고 값을 넣어주기 위해서는 이렇게 하면 됩니다:

int age;
age = 27;

오른쪽에 있는 27을 왼쪽의 변수 age에 넣어준 것이죠.

선언과 초기값 설정을 같이 할 수도 있습니다.

int age = 27;

자바에서는 변수의 자료형을 지정하기 때문에, 적합하지 않은 값을 넣어주면 오류가 나옵니다.

int age = "Thirty"; // 오류

변수 사용

변수의 사용은 다른 언어와 똑같습니다. 변수에 값을 대입 할 수도 있고, 연산을 할 수도 있습니다.

int age = 27;
int num = 13;

System.out.println(num + age); // 27 + 13 출력

age = num;                     // 13을 age에 지정
System.out.println(num + age); // 13 + 13 출력

age = age + 1;                 // 13 + 1을 age에 지정
System.out.println(num + age); // 13 + 14 출력

꿀팁: 출력 메소드

int age = 27;

System.out.println("Hello, I'm ");
System.out.println(age);
System.out.println(".");

Hello, I'm
27
.

이렇게 println 메소드를 쓰면 저절로 줄 바꿈이 되죠? 만약에 줄 바꿈을 원하지 않으면 println 대신 print를 써주면 됩니다.

int age = 27;

System.out.print("Hello, I'm ");
System.out.print(age);
System.out.println(".");

Hello, I'm 27.

